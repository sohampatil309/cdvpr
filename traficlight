----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    22:52:36 04/14/2025 
-- Design Name: 
-- Module Name:    abc - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity abc is
    Port ( clk : in  STD_LOGIC;
           reset : in  STD_LOGIC;
           light : out  STD_LOGIC_VECTOR (2 downto 0));
end abc;

architecture Behavioral of abc is
  type state_type is (R, G, Y);
    signal state : state_type := R;

begin
 process(clk, reset)
   begin
        if reset = '1' then
            state <= R;
        elsif rising_edge(clk) then
            case state is
                when R => state <= G;
                when G => state <= Y;
                when Y => state <= R;
            end case;
        end if;
    end process;

    -- Output logic based on current state
    with state select
        light <= "100" when R,  -- Red light ON
                 "001" when G,  -- Green light ON
                 "010" when Y;  -- Yellow lightÂ ON

end Behavioral;
