----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    23:28:13 04/13/2025 
-- Design Name: 
-- Module Name:    abc - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity abc is
    Port ( clk : in  STD_LOGIC;
           x : in  STD_LOGIC;
           reset : in  STD_LOGIC;
           z : out  STD_LOGIC);
end abc;

architecture Behavioral of abc is
Subtype states is std_logic_vector(1 downto 0); 
constant A: states:="00"; 
constant B: states:="01"; 
constant C: states:="10"; 
signal state: states; 
begin 
           process (clk, reset) 
begin 
      if (clk'event and clk='1') then 
           If reset='1' then 
             state<=A; 
else 
case state is 

when A => if (x='0') then
							state<=A; 
							z<='0'; 
						   else 
							state<=B; 
							z<='0'; 
							end if; 

when B => if (x='0') then 
                    state<=A; 
                    z<='0'; 
                    else 
                    state<=C; 
                    z<='0'; 
                    end if;
when C => if (x='0') then 
                    state<=A; 
                    z<='1'; 
                    else 
                    state<=C; 
                    z<='0'; 
                    end if; 
when others=>null; 
end case; 
end if;  
end if; 
end process; 

end Behavioral;
